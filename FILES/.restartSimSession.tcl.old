# Begin_DVE_Session_Save_Info
# DVE restart session
# Saved on Sun Dec 18 03:50:49 2022
# Designs open: 1
#   Sim: /DCNFS/users/student/lkim/Desktop/Fall2022/603/FILES/simv
# Toplevel windows open: 3
# 	TopLevel.1
# 	TopLevel.2
# 	TopLevel.3
#   Source.1: tb.dut
#   Wave.1: 180 signals
#   Wave.2: 144 signals
#   Group count = 20
#   Group inst[0].fifo signal count = 20
#   Group inst[0].portout signal count = 18
#   Group inst[0].mux8x1 signal count = 14
#   Group inst[0].port signal count = 12
#   Group inst[1].fifo signal count = 16
#   Group inst[1].mux8x1 signal count = 14
#   Group inst[1].port signal count = 12
#   Group inst[1].portout signal count = 18
#   Group inst[0].portout_1 signal count = 18
#   Group inst[1].portout_1 signal count = 18
#   Group inst[2].portout signal count = 18
#   Group inst[3].portout signal count = 18
#   Group inst[4].portout signal count = 18
#   Group inst[5].portout signal count = 18
#   Group inst[6].portout signal count = 18
#   Group inst[7].portout signal count = 18
# End_DVE_Session_Save_Info

# DVE version: P-2019.06-SP2-1_Full64
# DVE build date: Jan 30 2020 21:14:28


#<Session mode="Restart" path=".restartSimSession.tcl" type="Debug">

gui_set_loading_session_type Restart
gui_continuetime_set
gui_clear_window -type Wave
gui_clear_window -type List

# Application preferences
gui_set_pref_value -key app_default_font -value {Helvetica,10,-1,5,50,0,0,0,0,0}
gui_src_preferences -tabstop 8 -maxbits 24 -windownumber 1
#<WindowLayout>

# DVE top-level session


# Create and position top-level window: TopLevel.1

set TopLevel.1 TopLevel.1

# Docked window settings
set HSPane.1 HSPane.1
set Hier.1 Hier.1
set Stack.1 Stack.1
set Class.1 Class.1
set Object.1 Object.1
set DLPane.1 DLPane.1
set Data.1 Data.1
set Local.1 Local.1
set Member.1 Member.1
set Console.1 Console.1
gui_sync_global -id ${TopLevel.1} -option true

# MDI window settings
set Source.1 Source.1
gui_update_layout -id ${Source.1} {{show_state maximized} {dock_state undocked} {dock_on_new_line false}}

# End MDI window settings


# Create and position top-level window: TopLevel.2

set TopLevel.2 TopLevel.2

# Docked window settings
gui_sync_global -id ${TopLevel.2} -option true

# MDI window settings
set Wave.1 Wave.1
gui_update_layout -id ${Wave.1} {{show_state maximized} {dock_state undocked} {dock_on_new_line false} {child_wave_left 539} {child_wave_right 1313} {child_wave_colname 267} {child_wave_colvalue 268} {child_wave_col1 0} {child_wave_col2 1}}

# End MDI window settings


# Create and position top-level window: TopLevel.3

set TopLevel.3 TopLevel.3

# Docked window settings
gui_sync_global -id ${TopLevel.3} -option true

# MDI window settings
set Wave.2 Wave.2
gui_update_layout -id ${Wave.2} {{show_state maximized} {dock_state undocked} {dock_on_new_line false} {child_wave_left 539} {child_wave_right 1313} {child_wave_colname 267} {child_wave_colvalue 267} {child_wave_col1 0} {child_wave_col2 1}}

# End MDI window settings


#</WindowLayout>

#<Database>

gui_set_precision 1ps
gui_set_time_units 1ps
#</Database>

# DVE Global setting session: 


# Global: Breakpoints

# Global: Bus

# Global: Expressions

# Global: Signal Time Shift

# Global: Signal Compare

# Global: Signal Groups
gui_load_child_values {tb.dut.inst[2].portout}
gui_load_child_values {tb.dut.inst[0].fifo}
gui_load_child_values {tb.dut.inst[4].mux8x1}
gui_load_child_values {tb.dut.inst[5].portout}
gui_load_child_values {tb.dut.inst[1].mux8x1}
gui_load_child_values {tb.dut.inst[0].portout}
gui_load_child_values {tb.dut.inst[1].port}
gui_load_child_values {tb.dut.inst[3].portout}
gui_load_child_values {tb.dut.inst[6].portout}
gui_load_child_values {tb.dut.inst[1].fifo}
gui_load_child_values {tb.dut.inst[1].portout}
gui_load_child_values {tb.dut.inst[4].portout}
gui_load_child_values {tb.dut.inst[4].port}
gui_load_child_values {tb.dut.inst[7].portout}
gui_load_child_values {tb.dut.inst[0].mux8x1}
gui_load_child_values {tb.dut.inst[0].port}
gui_load_child_values {tb.dut.inst[4].fifo}


set _session_group_33 {inst[0].fifo}
gui_sg_create "$_session_group_33"
set {inst[0].fifo} "$_session_group_33"

gui_sg_addsignal -group "$_session_group_33" { {tb.dut.inst[0].fifo.Wait} {tb.dut.inst[0].fifo.PopReady} {tb.dut.inst[0].fifo.data_out} {tb.dut.inst[0].fifo.i} {tb.dut.inst[0].fifo.clk_pop} {tb.dut.inst[0].fifo.data_in} {tb.dut.inst[0].fifo.popState} {tb.dut.inst[0].fifo.clk_push} {tb.dut.inst[0].fifo.reset_n} {tb.dut.inst[0].fifo.head} {tb.dut.inst[0].fifo.tail} {tb.dut.inst[0].fifo.push_req_n} {tb.dut.inst[0].fifo.clear} {tb.dut.inst[0].fifo.stack} {tb.dut.inst[0].fifo.pop_req_n} {tb.dut.inst[0].fifo.$unit} }
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[0].fifo.Wait}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[0].fifo.Wait}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[0].fifo.PopReady}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[0].fifo.PopReady}}

set _session_group_34 $_session_group_33|
append _session_group_34 {inst[4].portout}
gui_sg_create "$_session_group_34"
set {inst[0].fifo|inst[4].portout} "$_session_group_34"

gui_sg_addsignal -group "$_session_group_34" { {tb.dut.inst[4].portout.Wait} {tb.dut.inst[4].portout.vld} {tb.dut.inst[4].portout.dout} {tb.dut.inst[4].portout.din} {tb.dut.inst[4].portout.clock} {tb.dut.inst[4].portout.cntp} {tb.dut.inst[4].portout.pop} {tb.dut.inst[4].portout.frameo_n} {tb.dut.inst[4].portout.payloadState} {tb.dut.inst[4].portout.addr} {tb.dut.inst[4].portout.reset_n} {tb.dut.inst[4].portout.valido_n} {tb.dut.inst[4].portout.validState} {tb.dut.inst[4].portout.payload} {tb.dut.inst[4].portout.$unit} {tb.dut.inst[4].portout.current_state} {tb.dut.inst[4].portout.writeout} {tb.dut.inst[4].portout.cnta} }
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[4].portout.Wait}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[4].portout.Wait}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[4].portout.payloadState}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[4].portout.payloadState}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[4].portout.addr}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[4].portout.addr}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[4].portout.validState}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[4].portout.validState}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[4].portout.writeout}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[4].portout.writeout}}

set _session_group_35 $_session_group_33|
append _session_group_35 {inst[4].fifo}
gui_sg_create "$_session_group_35"
set {inst[0].fifo|inst[4].fifo} "$_session_group_35"

gui_sg_addsignal -group "$_session_group_35" { {tb.dut.inst[4].fifo.Wait} {tb.dut.inst[4].fifo.head} {tb.dut.inst[4].fifo.PopReady} {tb.dut.inst[4].fifo.data_out} {tb.dut.inst[4].fifo.i} {tb.dut.inst[4].fifo.clk_pop} {tb.dut.inst[4].fifo.data_in} {tb.dut.inst[4].fifo.popState} {tb.dut.inst[4].fifo.clk_push} {tb.dut.inst[4].fifo.reset_n} {tb.dut.inst[4].fifo.tail} {tb.dut.inst[4].fifo.push_req_n} {tb.dut.inst[4].fifo.clear} {tb.dut.inst[4].fifo.stack} {tb.dut.inst[4].fifo.pop_req_n} {tb.dut.inst[4].fifo.$unit} }
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[4].fifo.Wait}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[4].fifo.Wait}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[4].fifo.head}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[4].fifo.head}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[4].fifo.PopReady}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[4].fifo.PopReady}}

gui_sg_move "$_session_group_35" -after "$_session_group_33" -pos 1 

set _session_group_36 $_session_group_33|
append _session_group_36 {inst[4].port}
gui_sg_create "$_session_group_36"
set {inst[0].fifo|inst[4].port} "$_session_group_36"

gui_sg_addsignal -group "$_session_group_36" { {tb.dut.inst[4].port.clock} {tb.dut.inst[4].port.reset_n} {tb.dut.inst[4].port.frame_n} {tb.dut.inst[4].port.valid_n} {tb.dut.inst[4].port.di} {tb.dut.inst[4].port.clr} {tb.dut.inst[4].port.payload} {tb.dut.inst[4].port.addr} {tb.dut.inst[4].port.vld} {tb.dut.inst[4].port.cnta} {tb.dut.inst[4].port.cntp} {tb.dut.inst[4].port.$unit} }

gui_sg_move "$_session_group_36" -after "$_session_group_33" -pos 3 

set _session_group_37 $_session_group_33|
append _session_group_37 {inst[4].mux8x1}
gui_sg_create "$_session_group_37"
set {inst[0].fifo|inst[4].mux8x1} "$_session_group_37"

gui_sg_addsignal -group "$_session_group_37" { {tb.dut.inst[4].mux8x1.vld_from_input} {tb.dut.inst[4].mux8x1.clock} {tb.dut.inst[4].mux8x1.reset_n} {tb.dut.inst[4].mux8x1.clr} {tb.dut.inst[4].mux8x1.x} {tb.dut.inst[4].mux8x1.valid_from_mux} {tb.dut.inst[4].mux8x1.datout} {tb.dut.inst[4].mux8x1.addr_from_input} {tb.dut.inst[4].mux8x1.datain} {tb.dut.inst[4].mux8x1.i} {tb.dut.inst[4].mux8x1.current_state} {tb.dut.inst[4].mux8x1.readenable} {tb.dut.inst[4].mux8x1.validState} {tb.dut.inst[4].mux8x1.$unit} }
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[4].mux8x1.readenable}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[4].mux8x1.readenable}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[4].mux8x1.validState}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[4].mux8x1.validState}}

gui_sg_move "$_session_group_37" -after "$_session_group_33" -pos 5 

set _session_group_38 {inst[0].portout}
gui_sg_create "$_session_group_38"
set {inst[0].portout} "$_session_group_38"

gui_sg_addsignal -group "$_session_group_38" { {tb.dut.inst[0].portout.clock} {tb.dut.inst[0].portout.vld} {tb.dut.inst[0].portout.reset_n} {tb.dut.inst[0].portout.din} {tb.dut.inst[0].portout.dout} {tb.dut.inst[0].portout.frameo_n} {tb.dut.inst[0].portout.valido_n} {tb.dut.inst[0].portout.pop} {tb.dut.inst[0].portout.cntp} {tb.dut.inst[0].portout.cnta} {tb.dut.inst[0].portout.payload} {tb.dut.inst[0].portout.current_state} {tb.dut.inst[0].portout.Wait} {tb.dut.inst[0].portout.validState} {tb.dut.inst[0].portout.payloadState} {tb.dut.inst[0].portout.addr} {tb.dut.inst[0].portout.writeout} {tb.dut.inst[0].portout.$unit} }
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[0].portout.Wait}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[0].portout.Wait}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[0].portout.validState}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[0].portout.validState}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[0].portout.payloadState}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[0].portout.payloadState}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[0].portout.addr}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[0].portout.addr}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[0].portout.writeout}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[0].portout.writeout}}

set _session_group_39 {inst[0].mux8x1}
gui_sg_create "$_session_group_39"
set {inst[0].mux8x1} "$_session_group_39"

gui_sg_addsignal -group "$_session_group_39" { {tb.dut.inst[0].mux8x1.vld_from_input} {tb.dut.inst[0].mux8x1.clock} {tb.dut.inst[0].mux8x1.reset_n} {tb.dut.inst[0].mux8x1.clr} {tb.dut.inst[0].mux8x1.x} {tb.dut.inst[0].mux8x1.valid_from_mux} {tb.dut.inst[0].mux8x1.datout} {tb.dut.inst[0].mux8x1.addr_from_input} {tb.dut.inst[0].mux8x1.datain} {tb.dut.inst[0].mux8x1.i} {tb.dut.inst[0].mux8x1.current_state} {tb.dut.inst[0].mux8x1.readenable} {tb.dut.inst[0].mux8x1.validState} {tb.dut.inst[0].mux8x1.$unit} }
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[0].mux8x1.readenable}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[0].mux8x1.readenable}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[0].mux8x1.validState}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[0].mux8x1.validState}}

set _session_group_40 {inst[0].port}
gui_sg_create "$_session_group_40"
set {inst[0].port} "$_session_group_40"

gui_sg_addsignal -group "$_session_group_40" { {tb.dut.inst[0].port.clock} {tb.dut.inst[0].port.reset_n} {tb.dut.inst[0].port.frame_n} {tb.dut.inst[0].port.valid_n} {tb.dut.inst[0].port.di} {tb.dut.inst[0].port.clr} {tb.dut.inst[0].port.payload} {tb.dut.inst[0].port.addr} {tb.dut.inst[0].port.vld} {tb.dut.inst[0].port.cnta} {tb.dut.inst[0].port.cntp} {tb.dut.inst[0].port.$unit} }

set _session_group_41 {inst[1].fifo}
gui_sg_create "$_session_group_41"
set {inst[1].fifo} "$_session_group_41"

gui_sg_addsignal -group "$_session_group_41" { {tb.dut.inst[1].fifo.clk_push} {tb.dut.inst[1].fifo.clk_pop} {tb.dut.inst[1].fifo.reset_n} {tb.dut.inst[1].fifo.push_req_n} {tb.dut.inst[1].fifo.pop_req_n} {tb.dut.inst[1].fifo.data_in} {tb.dut.inst[1].fifo.clear} {tb.dut.inst[1].fifo.data_out} {tb.dut.inst[1].fifo.head} {tb.dut.inst[1].fifo.tail} {tb.dut.inst[1].fifo.i} {tb.dut.inst[1].fifo.popState} {tb.dut.inst[1].fifo.stack} {tb.dut.inst[1].fifo.PopReady} {tb.dut.inst[1].fifo.Wait} {tb.dut.inst[1].fifo.$unit} }
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[1].fifo.PopReady}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[1].fifo.PopReady}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[1].fifo.Wait}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[1].fifo.Wait}}

set _session_group_42 {inst[1].mux8x1}
gui_sg_create "$_session_group_42"
set {inst[1].mux8x1} "$_session_group_42"

gui_sg_addsignal -group "$_session_group_42" { {tb.dut.inst[1].mux8x1.vld_from_input} {tb.dut.inst[1].mux8x1.clock} {tb.dut.inst[1].mux8x1.reset_n} {tb.dut.inst[1].mux8x1.clr} {tb.dut.inst[1].mux8x1.x} {tb.dut.inst[1].mux8x1.valid_from_mux} {tb.dut.inst[1].mux8x1.datout} {tb.dut.inst[1].mux8x1.addr_from_input} {tb.dut.inst[1].mux8x1.datain} {tb.dut.inst[1].mux8x1.i} {tb.dut.inst[1].mux8x1.current_state} {tb.dut.inst[1].mux8x1.readenable} {tb.dut.inst[1].mux8x1.validState} {tb.dut.inst[1].mux8x1.$unit} }
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[1].mux8x1.readenable}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[1].mux8x1.readenable}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[1].mux8x1.validState}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[1].mux8x1.validState}}

set _session_group_43 {inst[1].port}
gui_sg_create "$_session_group_43"
set {inst[1].port} "$_session_group_43"

gui_sg_addsignal -group "$_session_group_43" { {tb.dut.inst[1].port.clock} {tb.dut.inst[1].port.reset_n} {tb.dut.inst[1].port.frame_n} {tb.dut.inst[1].port.valid_n} {tb.dut.inst[1].port.di} {tb.dut.inst[1].port.clr} {tb.dut.inst[1].port.payload} {tb.dut.inst[1].port.addr} {tb.dut.inst[1].port.vld} {tb.dut.inst[1].port.cnta} {tb.dut.inst[1].port.cntp} {tb.dut.inst[1].port.$unit} }

set _session_group_44 {inst[1].portout}
gui_sg_create "$_session_group_44"
set {inst[1].portout} "$_session_group_44"

gui_sg_addsignal -group "$_session_group_44" { {tb.dut.inst[1].portout.Wait} {tb.dut.inst[1].portout.vld} {tb.dut.inst[1].portout.dout} {tb.dut.inst[1].portout.din} {tb.dut.inst[1].portout.clock} {tb.dut.inst[1].portout.cntp} {tb.dut.inst[1].portout.pop} {tb.dut.inst[1].portout.frameo_n} {tb.dut.inst[1].portout.payloadState} {tb.dut.inst[1].portout.addr} {tb.dut.inst[1].portout.reset_n} {tb.dut.inst[1].portout.valido_n} {tb.dut.inst[1].portout.validState} {tb.dut.inst[1].portout.payload} {tb.dut.inst[1].portout.$unit} {tb.dut.inst[1].portout.current_state} {tb.dut.inst[1].portout.writeout} {tb.dut.inst[1].portout.cnta} }
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[1].portout.Wait}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[1].portout.Wait}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[1].portout.payloadState}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[1].portout.payloadState}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[1].portout.addr}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[1].portout.addr}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[1].portout.validState}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[1].portout.validState}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[1].portout.writeout}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[1].portout.writeout}}

set _session_group_45 {inst[0].portout_1}
gui_sg_create "$_session_group_45"
set {inst[0].portout_1} "$_session_group_45"

gui_sg_addsignal -group "$_session_group_45" { {tb.dut.inst[0].portout.Wait} {tb.dut.inst[0].portout.vld} {tb.dut.inst[0].portout.dout} {tb.dut.inst[0].portout.din} {tb.dut.inst[0].portout.clock} {tb.dut.inst[0].portout.cntp} {tb.dut.inst[0].portout.pop} {tb.dut.inst[0].portout.frameo_n} {tb.dut.inst[0].portout.payloadState} {tb.dut.inst[0].portout.addr} {tb.dut.inst[0].portout.reset_n} {tb.dut.inst[0].portout.valido_n} {tb.dut.inst[0].portout.validState} {tb.dut.inst[0].portout.payload} {tb.dut.inst[0].portout.$unit} {tb.dut.inst[0].portout.current_state} {tb.dut.inst[0].portout.writeout} {tb.dut.inst[0].portout.cnta} }
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[0].portout.Wait}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[0].portout.Wait}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[0].portout.payloadState}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[0].portout.payloadState}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[0].portout.addr}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[0].portout.addr}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[0].portout.validState}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[0].portout.validState}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[0].portout.writeout}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[0].portout.writeout}}

set _session_group_46 {inst[1].portout_1}
gui_sg_create "$_session_group_46"
set {inst[1].portout_1} "$_session_group_46"

gui_sg_addsignal -group "$_session_group_46" { {tb.dut.inst[1].portout.Wait} {tb.dut.inst[1].portout.vld} {tb.dut.inst[1].portout.clock} {tb.dut.inst[1].portout.din} {tb.dut.inst[1].portout.dout} {tb.dut.inst[1].portout.cntp} {tb.dut.inst[1].portout.pop} {tb.dut.inst[1].portout.frameo_n} {tb.dut.inst[1].portout.payloadState} {tb.dut.inst[1].portout.addr} {tb.dut.inst[1].portout.reset_n} {tb.dut.inst[1].portout.valido_n} {tb.dut.inst[1].portout.validState} {tb.dut.inst[1].portout.payload} {tb.dut.inst[1].portout.$unit} {tb.dut.inst[1].portout.current_state} {tb.dut.inst[1].portout.writeout} {tb.dut.inst[1].portout.cnta} }
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[1].portout.Wait}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[1].portout.Wait}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[1].portout.payloadState}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[1].portout.payloadState}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[1].portout.addr}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[1].portout.addr}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[1].portout.validState}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[1].portout.validState}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[1].portout.writeout}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[1].portout.writeout}}

set _session_group_47 {inst[2].portout}
gui_sg_create "$_session_group_47"
set {inst[2].portout} "$_session_group_47"

gui_sg_addsignal -group "$_session_group_47" { {tb.dut.inst[2].portout.Wait} {tb.dut.inst[2].portout.vld} {tb.dut.inst[2].portout.dout} {tb.dut.inst[2].portout.din} {tb.dut.inst[2].portout.clock} {tb.dut.inst[2].portout.cntp} {tb.dut.inst[2].portout.pop} {tb.dut.inst[2].portout.frameo_n} {tb.dut.inst[2].portout.payloadState} {tb.dut.inst[2].portout.addr} {tb.dut.inst[2].portout.reset_n} {tb.dut.inst[2].portout.valido_n} {tb.dut.inst[2].portout.validState} {tb.dut.inst[2].portout.payload} {tb.dut.inst[2].portout.$unit} {tb.dut.inst[2].portout.current_state} {tb.dut.inst[2].portout.writeout} {tb.dut.inst[2].portout.cnta} }
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[2].portout.Wait}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[2].portout.Wait}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[2].portout.payloadState}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[2].portout.payloadState}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[2].portout.addr}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[2].portout.addr}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[2].portout.validState}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[2].portout.validState}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[2].portout.writeout}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[2].portout.writeout}}

set _session_group_48 {inst[3].portout}
gui_sg_create "$_session_group_48"
set {inst[3].portout} "$_session_group_48"

gui_sg_addsignal -group "$_session_group_48" { {tb.dut.inst[3].portout.Wait} {tb.dut.inst[3].portout.vld} {tb.dut.inst[3].portout.dout} {tb.dut.inst[3].portout.din} {tb.dut.inst[3].portout.clock} {tb.dut.inst[3].portout.cntp} {tb.dut.inst[3].portout.pop} {tb.dut.inst[3].portout.frameo_n} {tb.dut.inst[3].portout.payloadState} {tb.dut.inst[3].portout.addr} {tb.dut.inst[3].portout.reset_n} {tb.dut.inst[3].portout.valido_n} {tb.dut.inst[3].portout.validState} {tb.dut.inst[3].portout.payload} {tb.dut.inst[3].portout.$unit} {tb.dut.inst[3].portout.current_state} {tb.dut.inst[3].portout.writeout} {tb.dut.inst[3].portout.cnta} }
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[3].portout.Wait}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[3].portout.Wait}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[3].portout.payloadState}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[3].portout.payloadState}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[3].portout.addr}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[3].portout.addr}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[3].portout.validState}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[3].portout.validState}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[3].portout.writeout}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[3].portout.writeout}}

set _session_group_49 {inst[4].portout}
gui_sg_create "$_session_group_49"
set {inst[4].portout} "$_session_group_49"

gui_sg_addsignal -group "$_session_group_49" { {tb.dut.inst[4].portout.Wait} {tb.dut.inst[4].portout.vld} {tb.dut.inst[4].portout.clock} {tb.dut.inst[4].portout.din} {tb.dut.inst[4].portout.dout} {tb.dut.inst[4].portout.cntp} {tb.dut.inst[4].portout.pop} {tb.dut.inst[4].portout.frameo_n} {tb.dut.inst[4].portout.payloadState} {tb.dut.inst[4].portout.addr} {tb.dut.inst[4].portout.reset_n} {tb.dut.inst[4].portout.valido_n} {tb.dut.inst[4].portout.validState} {tb.dut.inst[4].portout.payload} {tb.dut.inst[4].portout.$unit} {tb.dut.inst[4].portout.current_state} {tb.dut.inst[4].portout.writeout} {tb.dut.inst[4].portout.cnta} }
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[4].portout.Wait}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[4].portout.Wait}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[4].portout.payloadState}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[4].portout.payloadState}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[4].portout.addr}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[4].portout.addr}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[4].portout.validState}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[4].portout.validState}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[4].portout.writeout}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[4].portout.writeout}}

set _session_group_50 {inst[5].portout}
gui_sg_create "$_session_group_50"
set {inst[5].portout} "$_session_group_50"

gui_sg_addsignal -group "$_session_group_50" { {tb.dut.inst[5].portout.Wait} {tb.dut.inst[5].portout.vld} {tb.dut.inst[5].portout.dout} {tb.dut.inst[5].portout.din} {tb.dut.inst[5].portout.clock} {tb.dut.inst[5].portout.cntp} {tb.dut.inst[5].portout.pop} {tb.dut.inst[5].portout.frameo_n} {tb.dut.inst[5].portout.payloadState} {tb.dut.inst[5].portout.addr} {tb.dut.inst[5].portout.reset_n} {tb.dut.inst[5].portout.valido_n} {tb.dut.inst[5].portout.validState} {tb.dut.inst[5].portout.payload} {tb.dut.inst[5].portout.$unit} {tb.dut.inst[5].portout.current_state} {tb.dut.inst[5].portout.writeout} {tb.dut.inst[5].portout.cnta} }
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[5].portout.Wait}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[5].portout.Wait}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[5].portout.payloadState}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[5].portout.payloadState}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[5].portout.addr}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[5].portout.addr}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[5].portout.validState}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[5].portout.validState}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[5].portout.writeout}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[5].portout.writeout}}

set _session_group_51 {inst[6].portout}
gui_sg_create "$_session_group_51"
set {inst[6].portout} "$_session_group_51"

gui_sg_addsignal -group "$_session_group_51" { {tb.dut.inst[6].portout.Wait} {tb.dut.inst[6].portout.vld} {tb.dut.inst[6].portout.dout} {tb.dut.inst[6].portout.din} {tb.dut.inst[6].portout.clock} {tb.dut.inst[6].portout.cntp} {tb.dut.inst[6].portout.pop} {tb.dut.inst[6].portout.frameo_n} {tb.dut.inst[6].portout.payloadState} {tb.dut.inst[6].portout.addr} {tb.dut.inst[6].portout.reset_n} {tb.dut.inst[6].portout.valido_n} {tb.dut.inst[6].portout.validState} {tb.dut.inst[6].portout.payload} {tb.dut.inst[6].portout.$unit} {tb.dut.inst[6].portout.current_state} {tb.dut.inst[6].portout.writeout} {tb.dut.inst[6].portout.cnta} }
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[6].portout.Wait}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[6].portout.Wait}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[6].portout.payloadState}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[6].portout.payloadState}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[6].portout.addr}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[6].portout.addr}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[6].portout.validState}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[6].portout.validState}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[6].portout.writeout}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[6].portout.writeout}}

set _session_group_52 {inst[7].portout}
gui_sg_create "$_session_group_52"
set {inst[7].portout} "$_session_group_52"

gui_sg_addsignal -group "$_session_group_52" { {tb.dut.inst[7].portout.Wait} {tb.dut.inst[7].portout.vld} {tb.dut.inst[7].portout.dout} {tb.dut.inst[7].portout.din} {tb.dut.inst[7].portout.clock} {tb.dut.inst[7].portout.cntp} {tb.dut.inst[7].portout.pop} {tb.dut.inst[7].portout.frameo_n} {tb.dut.inst[7].portout.payloadState} {tb.dut.inst[7].portout.addr} {tb.dut.inst[7].portout.reset_n} {tb.dut.inst[7].portout.valido_n} {tb.dut.inst[7].portout.validState} {tb.dut.inst[7].portout.payload} {tb.dut.inst[7].portout.$unit} {tb.dut.inst[7].portout.current_state} {tb.dut.inst[7].portout.writeout} {tb.dut.inst[7].portout.cnta} }
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[7].portout.Wait}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[7].portout.Wait}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[7].portout.payloadState}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[7].portout.payloadState}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[7].portout.addr}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[7].portout.addr}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[7].portout.validState}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[7].portout.validState}}
gui_set_radix -radix {decimal} -signals {{Sim:tb.dut.inst[7].portout.writeout}}
gui_set_radix -radix {twosComplement} -signals {{Sim:tb.dut.inst[7].portout.writeout}}

# Global: Highlighting

# Global: Stack
gui_change_stack_mode -mode list

# Post database loading setting...

# Save global setting...

# Wave/List view global setting
gui_cov_show_value -switch false

# Close all empty TopLevel windows
foreach __top [gui_ekki_get_window_ids -type TopLevel] {
    if { [llength [gui_ekki_get_window_ids -parent $__top]] == 0} {
        gui_close_window -window $__top
    }
}
gui_set_loading_session_type noSession
# DVE View/pane content session: 


# Hier 'Hier.1'
gui_show_window -window ${Hier.1}
gui_list_set_filter -id ${Hier.1} -list { {Package 1} {All 0} {Process 1} {VirtPowSwitch 0} {UnnamedProcess 1} {UDP 0} {Function 1} {Block 1} {SrsnAndSpaCell 0} {OVA Unit 1} {LeafScCell 1} {LeafVlgCell 1} {Interface 1} {LeafVhdCell 1} {$unit 1} {NamedBlock 1} {Task 1} {VlgPackage 1} {ClassDef 1} {VirtIsoCell 0} }
gui_list_set_filter -id ${Hier.1} -text {*}
gui_change_design -id ${Hier.1} -design Sim
catch {gui_list_expand -id ${Hier.1} tb}
catch {gui_list_expand -id ${Hier.1} tb.dut}
catch {gui_list_select -id ${Hier.1} {{tb.dut.inst[0].portout}}}
gui_view_scroll -id ${Hier.1} -vertical -set 240
gui_view_scroll -id ${Hier.1} -horizontal -set 0

# Class 'Class.1'
gui_list_set_filter -id ${Class.1} -list { {OVM 1} {VMM 1} {All 1} {Object 1} {UVM 1} {RVM 1} }
gui_list_set_filter -id ${Class.1} -text {*}
gui_change_design -id ${Class.1} -design Sim

# Member 'Member.1'
gui_list_set_filter -id ${Member.1} -list { {InternalMember 0} {RandMember 1} {All 0} {BaseMember 0} {PrivateMember 1} {LibBaseMember 0} {AutomaticMember 1} {VirtualMember 1} {PublicMember 1} {ProtectedMember 1} {OverRiddenMember 0} {InterfaceClassMember 1} {StaticMember 1} }
gui_list_set_filter -id ${Member.1} -text {*}

# Data 'Data.1'
gui_list_set_filter -id ${Data.1} -list { {Buffer 1} {Input 1} {Others 1} {Linkage 1} {Output 1} {LowPower 1} {Parameter 1} {All 1} {Aggregate 1} {LibBaseMember 1} {Event 1} {Assertion 1} {Constant 1} {Interface 1} {BaseMembers 1} {Signal 1} {$unit 1} {Inout 1} {Variable 1} }
gui_list_set_filter -id ${Data.1} -text {*}
gui_list_show_data -id ${Data.1} {tb.dut.inst[7].portout}
gui_view_scroll -id ${Data.1} -vertical -set 0
gui_view_scroll -id ${Data.1} -horizontal -set 0
gui_view_scroll -id ${Hier.1} -vertical -set 240
gui_view_scroll -id ${Hier.1} -horizontal -set 0

# Source 'Source.1'
gui_src_value_annotate -id ${Source.1} -switch false
gui_set_env TOGGLE::VALUEANNOTATE 0
gui_open_source -id ${Source.1}  -replace -active tb.dut /DCNFS/users/student/lkim/Desktop/Fall2022/603/FILES/router.v
gui_view_scroll -id ${Source.1} -vertical -set 0
gui_src_set_reusable -id ${Source.1}
# Warning: Class view not found.

# View 'Wave.1'
gui_wv_sync -id ${Wave.1} -switch false
set groupExD [gui_get_pref_value -category Wave -key exclusiveSG]
gui_set_pref_value -category Wave -key exclusiveSG -value {false}
set origWaveHeight [gui_get_pref_value -category Wave -key waveRowHeight]
gui_list_set_height -id Wave -height 25
set origGroupCreationState [gui_list_create_group_when_add -wave]
gui_list_create_group_when_add -wave -disable
gui_wv_zoom_timerange -id ${Wave.1} 239052009 240813290
gui_list_add_group -id ${Wave.1} -after {New Group} {{inst[0].fifo}}
gui_list_add_group -id ${Wave.1}  -after {inst[0].fifo} {{inst[0].fifo|inst[4].portout}}
gui_list_add_group -id ${Wave.1} -after {{inst[0].fifo|inst[4].portout}} {{inst[0].fifo|inst[4].fifo}}
gui_list_add_group -id ${Wave.1} -after {{tb.dut.inst[0].fifo.Wait[31:0]}} {{inst[0].fifo|inst[4].port}}
gui_list_add_group -id ${Wave.1} -after {{tb.dut.inst[0].fifo.PopReady[31:0]}} {{inst[0].fifo|inst[4].mux8x1}}
gui_list_add_group -id ${Wave.1} -after {New Group} {{inst[0].portout}}
gui_list_add_group -id ${Wave.1} -after {New Group} {{inst[0].mux8x1}}
gui_list_add_group -id ${Wave.1} -after {New Group} {{inst[0].port}}
gui_list_add_group -id ${Wave.1} -after {New Group} {{inst[1].fifo}}
gui_list_add_group -id ${Wave.1} -after {New Group} {{inst[1].mux8x1}}
gui_list_add_group -id ${Wave.1} -after {New Group} {{inst[1].port}}
gui_list_add_group -id ${Wave.1} -after {New Group} {{inst[1].portout}}
gui_list_collapse -id ${Wave.1} {inst[0].fifo|inst[4].port}
gui_list_collapse -id ${Wave.1} {inst[0].fifo|inst[4].mux8x1}
gui_list_collapse -id ${Wave.1} {inst[0].mux8x1}
gui_list_collapse -id ${Wave.1} {inst[1].fifo}
gui_list_collapse -id ${Wave.1} {inst[1].mux8x1}
gui_list_collapse -id ${Wave.1} {inst[1].port}
gui_list_collapse -id ${Wave.1} {inst[1].portout}
gui_list_select -id ${Wave.1} {{tb.dut.inst[4].portout.frameo_n} }
gui_seek_criteria -id ${Wave.1} {Any Edge}


gui_set_pref_value -category Wave -key exclusiveSG -value $groupExD
gui_list_set_height -id Wave -height $origWaveHeight
if {$origGroupCreationState} {
	gui_list_create_group_when_add -wave -enable
}
if { $groupExD } {
 gui_msg_report -code DVWW028
}
gui_list_set_filter -id ${Wave.1} -list { {Buffer 1} {Input 1} {Others 1} {Linkage 1} {Output 1} {Parameter 1} {All 1} {Aggregate 1} {LibBaseMember 1} {Event 1} {Assertion 1} {Constant 1} {Interface 1} {BaseMembers 1} {Signal 1} {$unit 1} {Inout 1} {Variable 1} }
gui_list_set_filter -id ${Wave.1} -text {*}
gui_list_set_insertion_bar  -id ${Wave.1} -group {inst[0].fifo|inst[4].portout}  -item {tb.dut.inst[4].portout.cnta[5:0]} -position below

gui_view_scroll -id ${Wave.1} -vertical -set 0
gui_show_grid -id ${Wave.1} -enable false

# View 'Wave.2'
gui_wv_sync -id ${Wave.2} -switch false
set groupExD [gui_get_pref_value -category Wave -key exclusiveSG]
gui_set_pref_value -category Wave -key exclusiveSG -value {false}
set origWaveHeight [gui_get_pref_value -category Wave -key waveRowHeight]
gui_list_set_height -id Wave -height 25
set origGroupCreationState [gui_list_create_group_when_add -wave]
gui_list_create_group_when_add -wave -disable
gui_wv_zoom_timerange -id ${Wave.2} 239932785 239933216
gui_list_add_group -id ${Wave.2} -after {New Group} {{inst[0].portout_1}}
gui_list_add_group -id ${Wave.2} -after {New Group} {{inst[1].portout_1}}
gui_list_add_group -id ${Wave.2} -after {New Group} {{inst[2].portout}}
gui_list_add_group -id ${Wave.2} -after {New Group} {{inst[3].portout}}
gui_list_add_group -id ${Wave.2} -after {New Group} {{inst[4].portout}}
gui_list_add_group -id ${Wave.2} -after {New Group} {{inst[5].portout}}
gui_list_add_group -id ${Wave.2} -after {New Group} {{inst[6].portout}}
gui_list_add_group -id ${Wave.2} -after {New Group} {{inst[7].portout}}
gui_seek_criteria -id ${Wave.2} {Any Edge}



gui_set_env TOGGLE::DEFAULT_WAVE_WINDOW ${Wave.2}
gui_set_pref_value -category Wave -key exclusiveSG -value $groupExD
gui_list_set_height -id Wave -height $origWaveHeight
if {$origGroupCreationState} {
	gui_list_create_group_when_add -wave -enable
}
if { $groupExD } {
 gui_msg_report -code DVWW028
}
gui_list_set_filter -id ${Wave.2} -list { {Buffer 1} {Input 1} {Others 1} {Linkage 1} {Output 1} {Parameter 1} {All 1} {Aggregate 1} {LibBaseMember 1} {Event 1} {Assertion 1} {Constant 1} {Interface 1} {BaseMembers 1} {Signal 1} {$unit 1} {Inout 1} {Variable 1} }
gui_list_set_filter -id ${Wave.2} -text {*}
gui_list_set_insertion_bar  -id ${Wave.2} -group {inst[7].portout}  -position in

gui_view_scroll -id ${Wave.2} -vertical -set 0
gui_show_grid -id ${Wave.2} -enable false
# Restore toplevel window zorder
# The toplevel window could be closed if it has no view/pane
if {[gui_exist_window -window ${TopLevel.2}]} {
	gui_set_active_window -window ${TopLevel.2}
	gui_set_active_window -window ${Wave.1}
}
if {[gui_exist_window -window ${TopLevel.1}]} {
	gui_set_active_window -window ${TopLevel.1}
	gui_set_active_window -window ${Source.1}
	gui_set_active_window -window ${HSPane.1}
}
if {[gui_exist_window -window ${TopLevel.3}]} {
	gui_set_active_window -window ${TopLevel.3}
	gui_set_active_window -window ${Wave.2}
}
#</Session>

